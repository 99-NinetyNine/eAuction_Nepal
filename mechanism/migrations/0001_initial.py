# Generated by Django 4.1.6 on 2023-03-08 10:05

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profile_pic', models.ImageField(default='default.jpg', upload_to='ProfileImages/')),
                ('phone_num', models.PositiveBigIntegerField(blank=True, null=True, unique=True)),
                ('bio', models.CharField(max_length=100, null=True)),
                ('latitude', models.CharField(max_length=20, null=True)),
                ('longitude', models.CharField(max_length=20, null=True)),
                ('phone_verified', models.BooleanField(default=False)),
                ('date_of_birth', models.DateField(auto_now=True, null=True)),
                ('is_inventory_incharge', models.BooleanField(default=False)),
                ('is_admin_A', models.BooleanField(default=False)),
                ('is_admin_B', models.BooleanField(default=False)),
                ('is_admin_C', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Auction',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=30, null=True)),
                ('description', models.CharField(max_length=200, null=True)),
                ('youtube', models.CharField(blank=True, max_length=100, null=True)),
                ('thumbnail', models.ImageField(null=True, upload_to='AuctionImages/')),
                ('open_close', models.BooleanField(default=False)),
                ('saved_confirmed', models.BooleanField(default=False)),
                ('product_shipped', models.BooleanField(default=False)),
                ('hide_post', models.BooleanField(blank=True, default=False)),
                ('pdf', models.FileField(upload_to='Auction_pdf/')),
                ('price_min_value', models.IntegerField(default=1)),
                ('price_max_value', models.IntegerField(default=100)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('expiry_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('downvotes', models.ManyToManyField(blank=True, related_name='dislikes', to=settings.AUTH_USER_MODEL)),
                ('favourite', models.ManyToManyField(blank=True, related_name='favourites', to=settings.AUTH_USER_MODEL)),
                ('upvotes', models.ManyToManyField(blank=True, related_name='likes', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auction', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-pub_date'],
            },
            managers=[
                ('query', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='SettledAuction',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settled', to='mechanism.auction')),
                ('winner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='won', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RescheduleAuction',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='re_schedule', to='mechanism.auction')),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.CharField(choices=[('0', 'No rating'), ('1', 'Poor'), ('2', 'Satisfactory'), ('3', 'Good'), ('4', 'Better'), ('5', 'Excellent')], default='3', max_length=1)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='src', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotSettledAuction',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('winner_index', models.IntegerField(blank=True, default=0, null=True)),
                ('auction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='not_settled', to='mechanism.auction')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('link_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('purpose', models.CharField(choices=[('0', 'New Auction'), ('1', 'Outbid'), ('2', 'Auction Award'), ('3', 'New Like'), ('4', 'New Bid'), ('5', 'Winner Lied'), ('6', 'Reopening For Any Reason'), ('7', 'Auction Expired')], default='0', max_length=1)),
                ('is_checked', models.BooleanField(blank=True, default=False)),
                ('receiver', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='LiveAuction',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='live', to='mechanism.auction')),
            ],
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bid_amount', models.FloatField(default=0)),
                ('bail_trn_id', models.CharField(max_length=120, null=True)),
                ('remaining_trn_id', models.CharField(max_length=120, null=True)),
                ('saved_confirmed', models.BooleanField(default=False)),
                ('auction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='mechanism.auction')),
                ('bidder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filled_bids', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AdminWaitingAuction',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('semaphore', models.IntegerField(blank=True, default=3, null=True)),
                ('auction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='waiting_admin', to='mechanism.auction')),
            ],
        ),
    ]
